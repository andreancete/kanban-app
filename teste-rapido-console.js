// üîç TESTE R√ÅPIDO - Cole no console do navegador (F12)

// 1. Verificar se a aplica√ß√£o est√° carregada
console.log('üîß Angular Version:', ng?.version || 'Angular n√£o carregado');

// 2. Testar rota atual
console.log('üìç Rota atual:', window.location.pathname);

// 3. Testar navega√ß√£o
if (typeof ng !== 'undefined') {
  console.log('üß≠ Testando navega√ß√£o para /diagnostic...');
  window.location.href = '/diagnostic';
}

// 4. Testar API diretamente
console.log('üåê Testando conex√£o com API...');
fetch('http://localhost:3000/graphql', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json'
  },
  body: JSON.stringify({
    query: `
      query {
        boards {
          id
          name
        }
      }
    `
  })
})
.then(response => {
  console.log('‚úÖ Status da API:', response.status);
  return response.json();
})
.then(data => {
  console.log('üìã Dados recebidos da API:', data);
  if (data.errors) {
    console.error('‚ùå Erros GraphQL:', data.errors);
  }
  if (data.data?.boards) {
    console.log(`üéØ Encontrados ${data.data.boards.length} boards`);
  }
})
.catch(error => {
  console.error('‚ùå Erro na API:', error);
  console.log('üí° Verifique se a API est√° rodando em http://localhost:3000');
});

// 5. Verificar localStorage/sessionStorage
console.log('üíæ LocalStorage keys:', Object.keys(localStorage));
console.log('üìù SessionStorage keys:', Object.keys(sessionStorage));

// 6. Verificar se h√° erros JavaScript
console.log('üö® Para ver erros JavaScript, v√° na aba Console e procure por mensagens em vermelho');

// 7. Instru√ß√µes de uso
console.log(`
üéØ PR√ìXIMOS PASSOS:

1. Se viu "‚úÖ Status da API: 200" - API funcionando
2. Se viu erros, verifique se a API NestJS est√° rodando
3. Acesse /diagnostic na URL para usar a ferramenta completa
4. Use o bot√£o "üîç Diagn√≥stico" no header da aplica√ß√£o

üìã COMANDOS √öTEIS:
- npm start (rodar frontend)
- Verificar se API est√° em http://localhost:3000/graphql
- F12 ‚Üí Network ‚Üí ver requisi√ß√µes
- F12 ‚Üí Console ‚Üí ver logs e erros
`);

// 8. Auto-navega√ß√£o para diagn√≥stico (comentado por seguran√ßa)
// setTimeout(() => {
//   if (confirm('Ir para p√°gina de diagn√≥stico?')) {
//     window.location.href = '/diagnostic';
//   }
// }, 3000);
